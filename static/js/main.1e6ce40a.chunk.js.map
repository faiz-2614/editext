{"version":3,"sources":["Components/Navbar.js","Components/TextArea.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","src","alt","width","height","onClick","changeBackGround","type","id","htmlFor","TextArea","useState","text","setText","onChange","event","target","value","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","filter","element","length","Alert","style","alert","role","message","App","setmode","setalert","document","body","backgroundColor","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gMAwBeA,MApBf,SAAgBC,GACZ,OACQ,8BACQ,qBAAKC,UAAS,iCAAyC,UAAbD,EAAME,KAAe,OAAO,SAAtE,SACI,sBAAKD,UAAU,kBAAf,UACA,oBAAGA,UAAU,eAAeE,KAAK,IAAjC,UACA,qBAAKC,IAAI,qBAAqBC,IAAI,GAAGC,MAAM,KAAKC,OAAO,KAAKN,UAAS,kCADrE,aAIA,sBAAKA,UAAS,sCAA8C,UAAbD,EAAME,KAAe,QAAQ,QAA5E,UACA,uBAAOD,UAAU,mBAAmBO,QAASR,EAAMS,iBAAkBC,KAAK,WAAWC,GAAG,2BACxF,wBAAOV,UAAU,mBAAoBW,QAAQ,yBAA7C,oBAA2F,UAAbZ,EAAME,KAAe,OAAO,QAA1G,sBCsCTW,MAlDf,SAAkBb,GACd,MAAwBc,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA8BA,OACI,sBAAKf,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,uBAAQW,QAAQ,8BAA8BX,UAAU,yBAAxD,SAAiF,8CACjF,0BAAUA,UAAU,mBAAoBgB,SAT7B,SAACC,GACpBF,EAAQE,EAAMC,OAAOC,QAQqDT,GAAG,8BAA8BS,MAAOL,EAAMM,KAAK,OACrH,wBAAQX,KAAK,SAASF,QAjCT,WACrB,IAAIc,EAAUP,EAAKQ,cACnBP,EAAQM,GACRtB,EAAMwB,UAAU,0BAA2B,YA8BcvB,UAAU,+BAA3D,kCACA,wBAAQS,KAAK,SAASF,QA5BT,WACrB,IAAIc,EAAUP,EAAKU,cACnBT,EAAQM,GACRtB,EAAMwB,UAAU,0BAA2B,YAyBcvB,UAAU,+BAA3D,kCACA,wBAAQS,KAAK,SAASF,QAvBb,WACjBQ,EAAQ,IACRhB,EAAMwB,UAAU,gBAAiB,YAqBoBvB,UAAU,+BAAvD,wBACA,wBAAQS,KAAK,SAASF,QAnBR,WACtB,IAAIc,EAAUP,EAAKW,MAAM,QACzBV,EAAQM,EAAQK,KAAK,MACrB3B,EAAMwB,UAAU,wBAAyB,YAgBiBvB,UAAU,+BAA5D,mCAEJ,sBAAKA,UAAU,YAAf,UACI,yBAAQA,UAAU,OAAlB,yBAAsCc,EAAKW,MAAM,OAAOE,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQC,UAAaA,OAAvG,OACA,yBAAQ7B,UAAU,OAAlB,8BAA2Cc,EAAKe,iBClCjDC,MAVf,SAAe/B,GACX,OACI,qBAAKgC,MAAO,CAACzB,OAAQ,QAArB,SACCP,EAAMiC,OAAS,sBAAKhC,UAAS,sBAAiBD,EAAMiC,MAAMvB,KAA7B,gCAAiEwB,KAAK,QAApF,UACb,iCAASlC,EAAMiC,MAAMvB,OADR,KACyBV,EAAMiC,MAAME,cCqC9CC,MApCf,WACE,MAAwBtB,mBAAS,SAAjC,mBAAOZ,EAAP,KAAamC,EAAb,KAaA,EAA0BvB,mBAAS,MAAnC,mBAAOmB,EAAP,KAAcK,EAAd,KAaA,OACE,qCACA,cAAC,EAAD,CAAQpC,KAAMA,EAAMO,iBA1BG,WACZ,UAAPP,GACFmC,EAAQ,QACRE,SAASC,KAAKR,MAAMS,gBAAiB,SAGrCJ,EAAQ,SACRE,SAASC,KAAKR,MAAMS,gBAAiB,YAoBvC,cAAC,EAAD,CAAOR,MAAOA,IACd,cAAC,EAAD,CAAU/B,KAAMA,EAAMsB,UAfN,SAACW,EAAQzB,GACvB4B,EAAS,CACPH,QAAQA,EACNzB,KAAKA,IAETgC,YAAW,WACTJ,EAAS,QACT,aClBOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BZ,K","file":"static/js/main.1e6ce40a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n            <div>\r\n                    <nav className={`navbar navbar-light bg-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n                        <div className=\"container-fluid\">\r\n                        <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src=\"../../edittext.png\" alt=\"\" width=\"24\" height=\"24\" className={`d-inline-block align-text-top`}/>\r\n                        EdiText\r\n                        </a>\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'light':'dark'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.changeBackGround} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode===\"light\"?\"dark\":\"light\"} Mode</label>\r\n                        </div>\r\n\r\n            </div>\r\n                    </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState} from 'react'\r\n\r\n\r\nfunction TextArea(props) {\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const UpperCaseHandler = ()=>{ \r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted To UpperCase!\" ,\"success\")\r\n    }\r\n\r\n    const LowerCaseHandler = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted To LowerCase!\" ,\"success\")\r\n    }\r\n\r\n    const ClearHandler = ()=>{ \r\n        setText(\"\")\r\n        props.showAlert(\"Cleared Text!\" ,\"success\")\r\n    }\r\n\r\n    const RemoveExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed Extra Spaces!\" ,\"success\")\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"mb-3\">\r\n                <label  htmlFor=\"exampleFormControlTextarea1\" className=\"form-label center mt-3\"><h1>Enter Text</h1></label>\r\n                <textarea className=\"form-control m-6\"  onChange={handleOnChange} id=\"exampleFormControlTextarea1\" value={text} rows=\"10\"></textarea>\r\n                <button type=\"button\" onClick={UpperCaseHandler} className=\"btn btn-dark m-2 btn-lg mt-3\">Convert To UpperCase</button>\r\n                <button type=\"button\" onClick={LowerCaseHandler} className=\"btn btn-dark m-2 btn-lg mt-3\">Convert To LowerCase</button>\r\n                <button type=\"button\" onClick={ClearHandler} className=\"btn btn-dark m-2 btn-lg mt-3\">Clear Text</button>\r\n                <button type=\"button\" onClick={RemoveExtraSpaces} className=\"btn btn-dark m-2 btn-lg mt-3\">Remove Extra Space</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <strong className=\"mx-3\">No of Words:{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} </strong>    \r\n                <strong className=\"mx-3\">No of Characters:{text.length}</strong>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextArea\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{props.alert.type}</strong>: {props.alert.message} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, {useState} from 'react'\nimport Alert from './Components/Alert';\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\")\n\n  const changeBackGround = () =>{\n    if (mode===\"light\"){\n      setmode(\"dark\")\n      document.body.style.backgroundColor =\"grey\"\n    }\n    else{\n      setmode(\"light\")\n      document.body.style.backgroundColor =\"white\"\n    }\n  }\n\n  const [alert, setalert] = useState(null)\n\n  const showAlert = (message,type)=>{\n      setalert({\n        message:message,\n          type:type\n      })\n      setTimeout(()=>{\n        setalert(null)},\n        1500\n      )\n  }\n\n  return (\n    <>\n    <Navbar mode={mode} changeBackGround={changeBackGround}/>\n    <Alert alert={alert}/>\n    <TextArea mode={mode} showAlert={showAlert}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}